#ifndef HEAP_H_
#define HEAP_H_

struct heapNode
{
	unsigned int priority;
	struct heapNode* rightChild;
	struct heapNode* leftChild;
	struct heapNode* parent;
	char name[21];
};

typedef struct heapNode* HEAP;



int isHeapEmpty(HEAP head);
HEAP getHeapNode();
void freeHeapNode(HEAP oldNode);
void inOrderTraversal(HEAP rootNode);
void swapData(HEAP element1, HEAP element2);
void heapifyDown(HEAP rootElement);
void heapifyUp(HEAP rootElement);
void addElementToHeap(HEAP rootElement, HEAP newElement, int count);

#endif
