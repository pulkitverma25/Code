
#include <stdio.h>
#include <stdlib.h>
#include "LinkedList.h"

#include "Stack.h"

#define TRUE 1
#define FALSE 0

int isStackEmpty(STACK stack)
{
	if (stack->top->next==NULL)
		return TRUE;
	else
		return FALSE;
}

void push(STACK stack, int number)
{
	LINKED_LIST newElement = getNode();
	if(newElement==NULL)
	{
		printf("ERROR: Memory Full");
	}
	else
	{
		newElement->key=number;
		newElement->next=stack->top->next;
		stack->top->next=newElement;
	}
	return;
}

int pop(STACK stack)
{
	LINKED_LIST deletedElement = getNode();
	int poppedNumber;
	if(deletedElement==NULL)
	{
		printf("ERROR: Memory Full");
		return -1;
	}
	else
	{
		if(isStackEmpty(stack))
		{
			//printf("ERROR: Stack Underflow");
			return -1;	
		}
		else
		{
			deletedElement=stack->top->next;
			stack->top->next=stack->top->next->next;
			poppedNumber=deletedElement->key;

			free(deletedElement);
			deletedElement=NULL;		
		
			return poppedNumber;
		}
	}
}

void printStack(STACK stack)
{
	printLinkedList(stack->top);
}


